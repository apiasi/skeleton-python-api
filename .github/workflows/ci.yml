name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configura a versão do Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Configura o Java 17 (garante que o ambiente usará JDK 17)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Instala as dependências do Python e ferramentas de teste
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # Executa os testes
      - name: Run Tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

      # Instala o SonarScanner CLI
      - name: Install SonarScanner CLI
        run: |
          # Baixa o arquivo com redirecionamentos
          curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.0.2.4839-linux-x64.zip
          # Lista informações do arquivo baixado para debug
          ls -lh sonar-scanner.zip
          file sonar-scanner.zip
          # Tenta extrair se for um arquivo válido
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-cli-7.0.2.4839-linux-x64/bin" >> $GITHUB_PATH


      # Executa a análise do SonarCloud
      - name: Run SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
